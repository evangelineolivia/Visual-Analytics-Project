---
title: "From Folk to Fame"
description: "Team 10's Project Proposal"
execute:
  echo: true
  eval: true
  warning: false
  freeze: true
body-classes: others
format: 
  html:
    number-offset: 0
---

# Motivation

In the rapidly evolving music industry, understanding how artists rise to fame and how genres expand their influence is a complex challenge. The story of Sailor Shift, a once-local Oceanus Folk singer who rose to global superstardom, offers a unique opportunity for us to examine this phenomenon. Her career not only redefined what it means to be a successful artist but also played a pivotal role in bringing the Oceanus Folk genre to international prominence.

# Objectives

This project aims to build a Shiny web application that enables users to explore and interpret the following:

-   **Sailor Shift’s influence**: Who influenced her and whom she has influenced directly or indirectly

-   **Collaboration patterns**: Which artists and genres have been shaped through her work

-   **Genre evolution**: How Oceanus Folk has spread and changed over time

-   **Artist comparison**: Explore the career trajectories of multiple artists in parallel

-   **Rising star prediction**: Identify up-and-coming Oceanus Folk artists using network centrality and activity measures

# Dataset Description

The data is from `MC1_graph.json`, a directed multigraph with:

17,412 nodes and 37,857 edges

**Node types**: `Person`, `Song`, `Album`, `MusicalGroup`, `RecordLabel`

**Edge types**: `PerformerOf`, `ProducerOf`, `InterpolatesFrom`, `InStyleOf`, `CoverOf`,`MemberOf`, `ComposerOf`,`LyricistOf`,`LyricalReferenceTo`, `DirectlySamples`, `RecordedBy`, `DistributedBy`

::: callout-note
## **Attributes of Interest:**

**Songs and Albums**: genre, release date, notable, notoriety date

**Persons**: name, stage name

**Edges**: influence and collaboration types between nodes
:::

# Methodology

## Data Wrangling

### Load the JSON graph

data \<- fromJSON("data/MC1_graph.json")

### Standardize and Clean Node Attributes

-   Handling missing values (e.g., stage names or display names)

-   Convert date fields to a consistent and usable format

### Categorize Edge Types

Our team has agreed to group the relationships into the following categories:

-   **Influence Edges**: These include relationships that reflect stylistic or creative influence, such as `DirectlySamples`, `CoverOf`, `InStyleOf`, and related types.

-   **Collaboration Edges**: These refer to instances where artists work together on music-related projects, including roles like `PerformerOf`, `ProducerOf`, `MemberOf`, and others.

## Network Construction

### Full Graph Construction

We combined all available relationship types to build a full network that reflects the interconnected nature of the music industry.

### Ego Network Extraction

To focus on Sailor Shift’s direct and indirect connections, we extracted **ego networks** centered on her node.

-   **1st-degree connections**: direct collaborators or influences
-   **2nd- and 3rd-degree connections**: indirect relationships (e.g., collaborators of collaborators)

## Temporal Analysis

### Time-Based Snapshots

To understand how influence and collaboration evolve over time, we plan to conduct a temporal analysis using key timestamp attributes in the dataset:

-   `release_date`: when a song or album was publicly released
-   `written_date`: when a work was originally created or composed
-   `notoriety_date`: when an artist or work began to gain significant attention

### Genre Diffusion Tracking

In this part our focus is to track how the Oceanus Folk genre expanded over time by analyzing:

-   **New collaborations** between artists,

-   **Emerging influence patterns**, and

-   **The evolving structure** of the overall artist network.

### Intermittent vs. Gradual Influence Patterns

We analyzed the frequency and consistency of influence spread across time within the Oceanus Folk genre. Specifically, we aim to distinguish between:

-   **Intermittent influence:** sharp, isolated bursts of impact (e.g., viral song)

This propose us to oversee if there is a spike in release or influence within period of time, while also trying to find a node with few edges, but strong centrality within a short time window.

-   **Gradual influence:** steady and persistent growth in artistic reach or style adoption

This propose us to oversee if there is a nodes with increasing degree or betweenness over multiple years

## Centrality & Prediction

To identify key figures and forecast potential breakout artists, we computed centrality metrics on the constructed network:

### Centrality Measures

We focused on the following network centrality indicators:

-   **Degree Centrality**: measures the number of direct connections an artist has, indicating collaboration frequency or direct influence.
-   **Betweenness Centrality**: quantifies how often an artist acts as a bridge in the network, highlighting their role in connecting different groups or genres.
-   **PageRank**: reflects both the number and quality of connections, emphasizing artists who are connected to other influential nodes.

### Defining a Rising Star

The prediction model goes beyond measuring popularity alone. It captures a multi-dimensional view of artistic potential by evaluating the following core components:

-   **Creative Activity**\
    Regular releases suggest momentum and consistency.

-   **Creative Contribution**\
    Artists who engage in composition, production, or lyrics.

-   **Collaboration**\
    Any other person who is connected to the same song(s) as the artist via a creative roles.

-   **Public Recognition**\
    While not the only sign of influence, chart performance remains a strong indicator of public recognition.

### Rising Star Score

We designed a composite **Rising Star Score** to quantify future potential. It includes the following weighted components:

-   **Total Works**\
    Reflects productivity and output volume.

-   **Charted Ratio** *(highly weighted)*\
    Measures public recognition; greater weight emphasizes impact over quantity.

-   **Collaboration Count**\
    Indicates the artist's engagement in the music community.

-   **Creative Contributions**\
    Captures behind-the-scenes roles (e.g., producer, lyricist, composer).

-   **Freshness Adjustment**\
    Penalizes artists who have not released new work recently, even if they debuted early.

# Shiny Application Design

To support interactive exploration and analysis, we propose three Shiny applications.

------------------------------------------------------------------------

## Shiny App 1: Sailor Shift’s Career Explorer

This app allows users to trace Sailor Shift’s artistic journey through interactive visualizations.

**Core Features:**

-   Timeline of album/single releases

-   Network of collaborations

-   Genre evolution over time

**Purpose:**\
Understand key turning points in Sailor's career and her expanding network of creative connections.

------------------------------------------------------------------------

## Shiny App 2: Oceanus Folk Influence Tracker

This app focuses on how the Oceanus Folk genre has spread over time and impacted other artists and styles.

**Core Features:**

-   Temporal influence network

-   Genre diffusion visualizations

-   Cross-genre influence analysis

**Purpose:** Track the global rise of Oceanus Folk and identify artists and genres influenced by it.

------------------------------------------------------------------------

## Shiny App 3: Rising Star Prediction Dashboard

This app predicts future breakout artists by analyzing multiple career-related metrics.

**Core Features:**

-   Rising Star Score calculation

-   Comparison of artist trajectories

-   Filters by genre, debut year, or charted songs

**Purpose:**\
Define what makes a rising star and forecast which Oceanus Folk artists are likely to break out next.

------------------------------------------------------------------------

# R Packages

| Package | Description |
|---------------------------|---------------------------------------------|
| **tidyverse** | For data wrangling (`dplyr`, `ggplot2`, `tibble`) |
| **jsonlite** | To parse the `MC1_graph.json` file |
| **lubridate** | For handling and filtering date fields like `release_date` and `notoriety_date` |
| **tidygraph** | Core graph analysis framework built on `igraph` |
| **ggraph** | For plotting influence and collaboration networks |
| **igraph** | For calculating centrality measures and ego networks |
| **shiny** | To build the interactive application |
| **shinyWidgets** | For enhanced UI elements in Shiny |
| **plotly** or **ggiraph** | For interactive network or radar visualizations |
| **DT** | For sortable and searchable artist tables in the app |
| **qs** or **feather** | For fast loading/saving of preprocessed graph snapshots |

# Prototypes and Storyboards

![](prototype_2.jpg){fig-align="center"}

The interactive Shiny application will serve as the primary interface for exploring the evolution of Sailor Shift's career, her influence network, and the spread of Oceanus Folk. The core visualization will be a dynamically generated network graph, with accompanying temporal charts or statistical summaries to enrich the narrative.

<!-- ::: panel-tabset -->

<!-- ## Input -->

<!-- 1.  Reference Node (Artist Selector) To avoid overwhelming the user with the full network (which contains over 60,000 nodes and 75,000 edges), users must select a reference node, such as Sailor Shift or another artist of interest. This serves as the anchor for all subsequent filtering. -->

<!-- UI Element: selectInput() dropdown or searchable selectizeInput() -->

<!-- Function: Defines the ego-network center from which we measure influence, collaborations, and diffusion -->

<!-- 2.  Network Depth (Proximity Filter) After selecting a reference node, the depth parameter will determine how far out the graph should render — in terms of shortest path distance from the selected node. Since artist subnetworks vary widely in size and density: -->

<!-- A checkbox toggle will allow rendering of the entire connected component -->

<!-- UI Elements: sliderInput() + checkboxInput() for "show full network" -->

<!-- Function: Controls graph complexity and visual clutter -->

<!-- 3.  Date (Temporal Filter) To capture temporal dynamics, a date slider will be used to render the state of the network at a specific point in time. Only: -->

<!-- Edges with a timestamp prior to or equal to the selected date will be rendered -->

<!-- Nodes not involved in active edges at that date will be excluded -->

<!-- UI Element: sliderInput() with year or month granularity -->

<!-- Function: Allows exploration of an artist's evolving career and influence -->

<!-- ## Output -->

<!-- | Output | Description | -->

<!-- |---------------------------|---------------------------------------------| -->

<!-- | **Network Graph (`ggraph`)** | Visualizes selected artist’s ego-network at specified depth and time | -->

<!-- | **Node Tooltip Summary** | Hover or click to show artist/album/song info, genre, notoriety | -->

<!-- | **Genre Distribution Plot (`ggplot2`)** | Shows dominant genres over time or in current neighborhood | -->

<!-- | **Influence Timeline (`line chart`)** | Tracks how the artist's influence score evolved over time | -->

<!-- ::: -->
